version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - echo "Installing dependencies"
      - echo "Listing contents of the current directory:"
      - ls -la
      - if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; else echo "requirements.txt not found"; fi
  pre_build:
    commands:
      - echo "Pre-build phase started"
      #- pip3 install awscli
  build:
    commands:
      - echo "Build phase started"
      #- zip -r lambda_function.zip .
  post_build:
    commands:
      - echo "Build phase completed"
      #- ls -la  # List directory contents after build
      - zip -q -x  *.git* -r artifact.zip .
      - aws lambda update-function-code --region=us-east-1 --function-name github-to-lambda-demo --zip-file fileb://artifact.zip
      - aws lambda wait function-updated --function-name github-to-lambda-demo
      - aws lambda get-function --function-name github-to-lambda-demo --query 'Configuration.[State, LastUpdateStatus]'
      - newVersion=$(aws lambda publish-version --region=us-east-1 --function-name github-to-lambda-demo --query Version --output text)
      - currentVersion=$(aws lambda get-alias --region=us-east-1 --function-name github-to-lambda-demo --name production --query FunctionVersion --output text)
      #- sed -i "s/%currentVersion%/${currentVersion}/g" appspec.yaml
      #- sed -i "s/%targetVersion%/${newVersion}/g" appspec.yaml
      #- aws s3 cp appspec.yaml s3://lambda-14/file/
      - aws deploy create-deployment --region=us-east-1 --application-name Lambda_app --deployment-group-name lambda_group --s3-location bucket=lambda-14/file/,bundleType=yaml,key=appspec.yaml
artifacts:
  files:
     - '**/*'
     - name: secondary-artifact-name
     - discard-paths: no 
     - base-directory: location
